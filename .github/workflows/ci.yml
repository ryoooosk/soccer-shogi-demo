name: CI

on:
  pull_request:
    branches: [ main ]
    types: [opened, synchronize]
  push:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run linter
      run: npm run lint

    - name: Run tests with coverage
      run: npm run test:coverage -- --run --reporter=json --outputFile=test-results.json

    - name: Build project
      run: npm run build

    - name: Comment PR with test results
      uses: actions/github-script@v7
      if: github.event_name == 'pull_request'
      with:
        script: |
          const fs = require('fs');
          
          try {
            const testResults = JSON.parse(fs.readFileSync('test-results.json', 'utf8'));
            const summary = JSON.parse(fs.readFileSync('coverage/coverage-summary.json', 'utf8'));
            
            const passed = testResults.numPassedTests || 0;
            const failed = testResults.numFailedTests || 0;
            const total = testResults.numTotalTests || 0;
            const coverage = summary.total.lines.pct || 0;
            
            const status = failed === 0 ? '‚úÖ PASSED' : '‚ùå FAILED';
            
            const comment = `## ${status} Test Results
            
            üìä **Test Summary**
            - ‚úÖ Passed: ${passed}
            - ‚ùå Failed: ${failed}
            - üìà Total: ${total}
            - üéØ Coverage: ${coverage.toFixed(1)}%
            
            ${failed > 0 ? '‚ö†Ô∏è Some tests failed. Please check the workflow logs for details.' : 'üéâ All tests passed!'}
            `;
            
            // Êó¢Â≠ò„ÅÆ„Ç≥„É°„É≥„Éà„ÇíÊé¢„Åó„Å¶Êõ¥Êñ∞„ÄÅ„Å™„Åë„Çå„Å∞Êñ∞Ë¶è‰ΩúÊàê
            const { data: comments } = await github.rest.issues.listComments({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
            });
            
            const botComment = comments.find(comment => 
              comment.user.type === 'Bot' && comment.body.includes('Test Results')
            );
            
            if (botComment) {
              await github.rest.issues.updateComment({
                comment_id: botComment.id,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: comment
              });
            } else {
              await github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: comment
              });
            }
          } catch (error) {
            console.log('Could not parse test results:', error);
            
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '‚ö†Ô∏è Test execution completed but results could not be parsed. Check the workflow logs for details.'
            });
          }